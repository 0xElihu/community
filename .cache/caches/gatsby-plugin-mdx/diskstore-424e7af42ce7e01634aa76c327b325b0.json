{"expireTime":9007200856297949000,"key":"gatsby-plugin-mdx-entire-payload-718d58456d26401153fdcdf52dea4d41-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Engineering for Communities","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":30,"offset":30},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":30,"offset":30},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This site was not just created to make it easy for content contributors to create their own pages with minimal developer oversight.\nIt's explicitly meant to be easy for engineers to extend. MakerDAO is about building better money, and this requires that the tools\nwe use are openly accessible and can be used without permission. We're taking that a step further here, by making our community tools\nnot only open, but ","position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":7,"column":20,"offset":449},"indent":[1,1,1]}},{"type":"strong","children":[{"type":"text","value":"easy","position":{"start":{"line":7,"column":22,"offset":451},"end":{"line":7,"column":26,"offset":455},"indent":[]}}],"position":{"start":{"line":7,"column":20,"offset":449},"end":{"line":7,"column":28,"offset":457},"indent":[]}},{"type":"text","value":" to use, complete with an entire section dedicated to technical education.","position":{"start":{"line":7,"column":28,"offset":457},"end":{"line":7,"column":102,"offset":531},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":7,"column":102,"offset":531},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here we explain our experience of building a scalable community website that can handle multiple different languages;\nmany different kinds of contributors; many different ways and means of contributing; why we've structured things as we have; how you\ncan extend anything; and how you can dive deeper into the internals of how specific modules and components work. You'll also learn how to\nleverage our design system - ","position":{"start":{"line":9,"column":1,"offset":533},"end":{"line":12,"column":30,"offset":951},"indent":[1,1,1]}},{"type":"link","title":null,"url":"https://github.com/makerdao/dai-ui","children":[{"type":"text","value":"DAI-UI","position":{"start":{"line":12,"column":31,"offset":952},"end":{"line":12,"column":37,"offset":958},"indent":[]}}],"position":{"start":{"line":12,"column":30,"offset":951},"end":{"line":12,"column":74,"offset":995},"indent":[]}},{"type":"text","value":" - to build slick, smooth and optimised user interfaces with minimal effort.","position":{"start":{"line":12,"column":74,"offset":995},"end":{"line":12,"column":150,"offset":1071},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":533},"end":{"line":12,"column":150,"offset":1071},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's great to speak the language of online community building, but one needs solid technical foundations on which to build truly transformative\nways of interacting and relating. This site is a building-block which sits on top of our open smart contracts that\ndefine the actual protocols for a better kind of money, in order to show you how high the temple pillars can really reach.","position":{"start":{"line":14,"column":1,"offset":1073},"end":{"line":16,"column":123,"offset":1454},"indent":[1,1]}}],"position":{"start":{"line":14,"column":1,"offset":1073},"end":{"line":16,"column":123,"offset":1454},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is just the beginning of your journey. Once you've seen how easy it is to work with our technical community tools, and how they\ninteract with our Developer Experience and Design work, like DAI-UI, we hope you'll fall down the rabbit hole\nand begin to figure out the deeper architectural challenges and intricacies of what \"better money\" might really mean for all of us.","position":{"start":{"line":18,"column":1,"offset":1456},"end":{"line":20,"column":132,"offset":1830},"indent":[1,1]}}],"position":{"start":{"line":18,"column":1,"offset":1456},"end":{"line":20,"column":132,"offset":1830},"indent":[1,1]}},{"type":"jsx","value":"<Button to=\"https://docs.makerdao.com\" primary>\n  Protocol Documentation\n</Button>","position":{"start":{"line":22,"column":1,"offset":1832},"end":{"line":24,"column":10,"offset":1914},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"order\":0,\"hideLanguageSelector\":true}","position":{"start":{"line":27,"column":1,"offset":1917},"end":{"line":27,"column":68,"offset":1984},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":27,"column":68,"offset":1984}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 0,\n  \"hideLanguageSelector\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Button = makeShortcode(\"Button\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Engineering for Communities\"), mdx(\"p\", null, \"This site was not just created to make it easy for content contributors to create their own pages with minimal developer oversight.\\nIt's explicitly meant to be easy for engineers to extend. MakerDAO is about building better money, and this requires that the tools\\nwe use are openly accessible and can be used without permission. We're taking that a step further here, by making our community tools\\nnot only open, but \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"easy\"), \" to use, complete with an entire section dedicated to technical education.\"), mdx(\"p\", null, \"Here we explain our experience of building a scalable community website that can handle multiple different languages;\\nmany different kinds of contributors; many different ways and means of contributing; why we've structured things as we have; how you\\ncan extend anything; and how you can dive deeper into the internals of how specific modules and components work. You'll also learn how to\\nleverage our design system - \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/makerdao/dai-ui\"\n  }), \"DAI-UI\"), \" - to build slick, smooth and optimised user interfaces with minimal effort.\"), mdx(\"p\", null, \"It's great to speak the language of online community building, but one needs solid technical foundations on which to build truly transformative\\nways of interacting and relating. This site is a building-block which sits on top of our open smart contracts that\\ndefine the actual protocols for a better kind of money, in order to show you how high the temple pillars can really reach.\"), mdx(\"p\", null, \"This is just the beginning of your journey. Once you've seen how easy it is to work with our technical community tools, and how they\\ninteract with our Developer Experience and Design work, like DAI-UI, we hope you'll fall down the rabbit hole\\nand begin to figure out the deeper architectural challenges and intricacies of what \\\"better money\\\" might really mean for all of us.\"), mdx(Button, {\n    to: \"https://docs.makerdao.com\",\n    primary: true,\n    mdxType: \"Button\"\n  }, \"Protocol Documentation\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"order\": 0,\n  \"hideLanguageSelector\": true\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst Button = makeShortcode(\"Button\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Engineering for Communities`}</h1>\n    <p>{`This site was not just created to make it easy for content contributors to create their own pages with minimal developer oversight.\nIt's explicitly meant to be easy for engineers to extend. MakerDAO is about building better money, and this requires that the tools\nwe use are openly accessible and can be used without permission. We're taking that a step further here, by making our community tools\nnot only open, but `}<strong parentName=\"p\">{`easy`}</strong>{` to use, complete with an entire section dedicated to technical education.`}</p>\n    <p>{`Here we explain our experience of building a scalable community website that can handle multiple different languages;\nmany different kinds of contributors; many different ways and means of contributing; why we've structured things as we have; how you\ncan extend anything; and how you can dive deeper into the internals of how specific modules and components work. You'll also learn how to\nleverage our design system - `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/makerdao/dai-ui\"\n      }}>{`DAI-UI`}</a>{` - to build slick, smooth and optimised user interfaces with minimal effort.`}</p>\n    <p>{`It's great to speak the language of online community building, but one needs solid technical foundations on which to build truly transformative\nways of interacting and relating. This site is a building-block which sits on top of our open smart contracts that\ndefine the actual protocols for a better kind of money, in order to show you how high the temple pillars can really reach.`}</p>\n    <p>{`This is just the beginning of your journey. Once you've seen how easy it is to work with our technical community tools, and how they\ninteract with our Developer Experience and Design work, like DAI-UI, we hope you'll fall down the rabbit hole\nand begin to figure out the deeper architectural challenges and intricacies of what \"better money\" might really mean for all of us.`}</p>\n    <Button to=\"https://docs.makerdao.com\" primary mdxType=\"Button\">\n  Protocol Documentation\n    </Button>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}